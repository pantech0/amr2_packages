[0.000000] (-) TimerEvent: {}
[0.000193] (roboi_amr_control) JobQueued: {'identifier': 'roboi_amr_control', 'dependencies': OrderedDict()}
[0.000360] (roboi_amr_control) JobStarted: {'identifier': 'roboi_amr_control'}
[0.005306] (roboi_amr_control) JobProgress: {'identifier': 'roboi_amr_control', 'progress': 'cmake'}
[0.005711] (roboi_amr_control) JobProgress: {'identifier': 'roboi_amr_control', 'progress': 'build'}
[0.006174] (roboi_amr_control) Command: {'cmd': ['/usr/bin/cmake', '--build', '/home/roboi-amr/ros2_ws/src/amr2_packages/roboi_control/build/roboi_amr_control', '--', '-j8', '-l8'], 'cwd': '/home/roboi-amr/ros2_ws/src/amr2_packages/roboi_control/build/roboi_amr_control', 'env': OrderedDict([('RCUTILS_LOGGING_BUFFERED_STREAM', '1'), ('LESSOPEN', '| /usr/bin/lesspipe %s'), ('USER', 'roboi-amr'), ('SSH_CLIENT', '192.168.11.230 57553 22'), ('LC_TIME', 'ko_KR.UTF-8'), ('ROS_NAMESPACE', 'robot1'), ('XDG_SESSION_TYPE', 'tty'), ('GIT_ASKPASS', '/home/roboi-amr/.vscode-server/cli/servers/Stable-d78a74bcdfad14d5d3b1b782f87255d802b57511/server/extensions/git/dist/askpass.sh'), ('SHLVL', '1'), ('RCUTILS_CONSOLE_OUTPUT_FORMAT', '[{severity}]: {message}'), ('LD_LIBRARY_PATH', '/home/roboi-amr/ros2_ws/src/amr2_packages/roboi_amr_msgs/install/roboi_amr_msgs/lib:/home/roboi-amr/ros2_ws/install/roboi_msgs/lib:/opt/ros/humble/opt/rviz_ogre_vendor/lib:/opt/ros/humble/lib/x86_64-linux-gnu:/opt/ros/humble/lib'), ('BROWSER', '/home/roboi-amr/.vscode-server/cli/servers/Stable-d78a74bcdfad14d5d3b1b782f87255d802b57511/server/bin/helpers/browser.sh'), ('MOTD_SHOWN', 'pam'), ('HOME', '/home/roboi-amr'), ('OLDPWD', '/home/roboi-amr/ros2_ws/src/amr2_packages'), ('TERM_PROGRAM_VERSION', '1.94.0'), ('VSCODE_IPC_HOOK_CLI', '/run/user/1000/vscode-ipc-a70a90f1-a4c7-40ad-a0d6-1659e08ec3e6.sock'), ('ROS_PYTHON_VERSION', '3'), ('VSCODE_GIT_ASKPASS_MAIN', '/home/roboi-amr/.vscode-server/cli/servers/Stable-d78a74bcdfad14d5d3b1b782f87255d802b57511/server/extensions/git/dist/askpass-main.js'), ('LC_MONETARY', 'ko_KR.UTF-8'), ('VSCODE_GIT_ASKPASS_NODE', '/home/roboi-amr/.vscode-server/cli/servers/Stable-d78a74bcdfad14d5d3b1b782f87255d802b57511/server/node'), ('SSL_CERT_FILE', '/usr/lib/ssl/certs/ca-certificates.crt'), ('DBUS_SESSION_BUS_ADDRESS', 'unix:path=/run/user/1000/bus'), ('COLORTERM', 'truecolor'), ('_colcon_cd_root', '/home/roboi-amr/ros2_ws'), ('COLCON_PREFIX_PATH', '/home/roboi-amr/ros2_ws/src/amr2_packages/roboi_amr_msgs/install:/home/roboi-amr/ros2_ws/install'), ('ROS_DISTRO', 'humble'), ('LOGNAME', 'roboi-amr'), ('_', '/usr/bin/colcon'), ('ROS_VERSION', '2'), ('XDG_SESSION_CLASS', 'user'), ('TERM', 'xterm-256color'), ('XDG_SESSION_ID', '16'), ('ROS_LOCALHOST_ONLY', '0'), ('PATH', '/home/roboi-amr/.vscode-server/cli/servers/Stable-d78a74bcdfad14d5d3b1b782f87255d802b57511/server/bin/remote-cli:/opt/ros/humble/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin'), ('LC_ADDRESS', 'ko_KR.UTF-8'), ('XDG_RUNTIME_DIR', '/run/user/1000'), ('SSL_CERT_DIR', '/usr/lib/ssl/certs'), ('LANG', 'en_US.UTF-8'), ('LC_TELEPHONE', 'ko_KR.UTF-8'), ('RMW_IMPLEMENTATION', 'rmw_fastrtps_cpp'), ('LS_COLORS', 'rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36:'), ('VSCODE_GIT_IPC_HANDLE', '/run/user/1000/vscode-git-33694388da.sock'), ('TERM_PROGRAM', 'vscode'), ('ROS_DOMAIN_ID', '7'), ('AMENT_PREFIX_PATH', '/home/roboi-amr/ros2_ws/src/amr2_packages/roboi_amr_msgs/install/roboi_amr_msgs:/home/roboi-amr/ros2_ws/install/steering_control:/home/roboi-amr/ros2_ws/install/roboi_msgs:/opt/ros/humble'), ('SHELL', '/bin/bash'), ('LC_NAME', 'ko_KR.UTF-8'), ('LESSCLOSE', '/usr/bin/lesspipe %s %s'), ('LC_MEASUREMENT', 'ko_KR.UTF-8'), ('LC_IDENTIFICATION', 'ko_KR.UTF-8'), ('VSCODE_GIT_ASKPASS_EXTRA_ARGS', ''), ('RCUTILS_LOGGING_USE_STDOUT', '0'), ('PWD', '/home/roboi-amr/ros2_ws/src/amr2_packages/roboi_control/build/roboi_amr_control'), ('LC_ALL', 'en_US.UTF-8'), ('SSH_CONNECTION', '192.168.11.230 57553 192.168.0.41 22'), ('RCUTILS_COLORIZED_OUTPUT', '1'), ('XDG_DATA_DIRS', '/usr/share/gnome:/usr/local/share:/usr/share:/var/lib/snapd/desktop'), ('PYTHONPATH', '/home/roboi-amr/ros2_ws/src/amr2_packages/roboi_amr_msgs/install/roboi_amr_msgs/local/lib/python3.10/dist-packages:/home/roboi-amr/ros2_ws/install/roboi_msgs/local/lib/python3.10/dist-packages:/opt/ros/humble/lib/python3.10/site-packages:/opt/ros/humble/local/lib/python3.10/dist-packages'), ('LC_NUMERIC', 'ko_KR.UTF-8'), ('LC_PAPER', 'ko_KR.UTF-8'), ('COLCON', '1'), ('CMAKE_PREFIX_PATH', '/home/roboi-amr/ros2_ws/src/amr2_packages/roboi_amr_msgs/install/roboi_amr_msgs:/home/roboi-amr/ros2_ws/install/steering_control:/home/roboi-amr/ros2_ws/install/roboi_msgs:/opt/ros/humble')]), 'shell': False}
[0.034403] (roboi_amr_control) StdoutLine: {'line': b'\x1b[35m\x1b[1mConsolidate compiler generated dependencies of target roboi_amr_control\x1b[0m\n'}
[0.050118] (roboi_amr_control) StdoutLine: {'line': b'[ 20%] \x1b[32mBuilding CXX object CMakeFiles/roboi_amr_control.dir/src/roboi_udp.cpp.o\x1b[0m\n'}
[0.099892] (-) TimerEvent: {}
[0.200154] (-) TimerEvent: {}
[0.300427] (-) TimerEvent: {}
[0.400763] (-) TimerEvent: {}
[0.501028] (-) TimerEvent: {}
[0.601296] (-) TimerEvent: {}
[0.701621] (-) TimerEvent: {}
[0.801856] (-) TimerEvent: {}
[0.902232] (-) TimerEvent: {}
[1.002580] (-) TimerEvent: {}
[1.102951] (-) TimerEvent: {}
[1.203291] (-) TimerEvent: {}
[1.303528] (-) TimerEvent: {}
[1.403767] (-) TimerEvent: {}
[1.504103] (-) TimerEvent: {}
[1.570198] (roboi_amr_control) StderrLine: {'line': b'\x1b[01m\x1b[K/home/roboi-amr/ros2_ws/src/amr2_packages/roboi_control/src/roboi_udp.cpp:200:6:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno declaration matches \xe2\x80\x98\x1b[01m\x1b[Kvoid roboi_udp::udp_callback(roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.570409] (roboi_amr_control) StderrLine: {'line': b'  200 | void \x1b[01;31m\x1b[Kroboi_udp\x1b[m\x1b[K::udp_callback(const roboi_amr_msgs::msg::Udpsend::SharedPtr udp_msg)\n'}
[1.570484] (roboi_amr_control) StderrLine: {'line': b'      |      \x1b[01;31m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.570546] (roboi_amr_control) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/home/roboi-amr/ros2_ws/src/amr2_packages/roboi_control/src/roboi_udp.cpp:1\x1b[m\x1b[K:\n'}
[1.570631] (roboi_amr_control) StderrLine: {'line': b'\x1b[01m\x1b[K/home/roboi-amr/ros2_ws/src/amr2_packages/roboi_control/include/roboi/roboi_udp.hpp:125:6:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate is: \xe2\x80\x98\x1b[01m\x1b[Kvoid roboi_udp::udp_callback(std_msgs::msg::Float64MultiArray_<std::allocator<void> >::SharedPtr)\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.570698] (roboi_amr_control) StderrLine: {'line': b'  125 | void \x1b[01;36m\x1b[Kudp_callback\x1b[m\x1b[K(const std_msgs::msg::Float64MultiArray::SharedPtr udp_msg);\n'}
[1.570766] (roboi_amr_control) StderrLine: {'line': b'      |      \x1b[01;36m\x1b[K^~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.570825] (roboi_amr_control) StderrLine: {'line': b'\x1b[01m\x1b[K/home/roboi-amr/ros2_ws/src/amr2_packages/roboi_control/include/roboi/roboi_udp.hpp:19:7:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K\xe2\x80\x98\x1b[01m\x1b[Kclass roboi_udp\x1b[m\x1b[K\xe2\x80\x99 defined here\n'}
[1.570886] (roboi_amr_control) StderrLine: {'line': b'   19 | class \x1b[01;36m\x1b[Kroboi_udp\x1b[m\x1b[K\n'}
[1.570944] (roboi_amr_control) StderrLine: {'line': b'      |       \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.604214] (-) TimerEvent: {}
[1.704513] (-) TimerEvent: {}
[1.804816] (-) TimerEvent: {}
[1.875800] (roboi_amr_control) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_base.hpp:32\x1b[m\x1b[K,\n'}
[1.876062] (roboi_amr_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:29\x1b[m\x1b[K,\n'}
[1.876117] (roboi_amr_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[1.876175] (roboi_amr_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[1.876221] (roboi_amr_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.876265] (roboi_amr_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.876310] (roboi_amr_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[1.876354] (roboi_amr_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.876399] (roboi_amr_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.876442] (roboi_amr_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.876486] (roboi_amr_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/roboi-amr/ros2_ws/src/amr2_packages/roboi_control/include/roboi/roboi_udp.hpp:4\x1b[m\x1b[K,\n'}
[1.876531] (roboi_amr_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/roboi-amr/ros2_ws/src/amr2_packages/roboi_control/src/roboi_udp.cpp:1\x1b[m\x1b[K:\n'}
[1.876629] (roboi_amr_control) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (roboi_udp::*(roboi_udp*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64MultiArray_<std::allocator<void> > >)>; MessageT = roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.876764] (roboi_amr_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >; CallbackT = std::_Bind<void (roboi_udp::*(roboi_udp*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.876868] (roboi_amr_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >; CallbackT = std::_Bind<void (roboi_udp::*(roboi_udp*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.876914] (roboi_amr_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >; CallbackT = std::_Bind<void (roboi_udp::*(roboi_udp*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.876952] (roboi_amr_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >; CallbackT = std::_Bind<void (roboi_udp::*(roboi_udp*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.876996] (roboi_amr_control) StderrLine: {'line': b'\x1b[01m\x1b[K/home/roboi-amr/ros2_ws/src/amr2_packages/roboi_control/src/roboi_udp.cpp:34:75:\x1b[m\x1b[K   required from here\n'}
[1.877031] (roboi_amr_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno match for \xe2\x80\x98\x1b[01m\x1b[Koperator=\x1b[m\x1b[K\xe2\x80\x99 (operand types are \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::AnySubscriptionCallbackHelper<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::allocator<void>, false>::variant_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::function<void(const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >&)>, std::function<void(const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::default_delete<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::default_delete<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >\x1b[m\x1b[K\xe2\x80\x99} and \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::_Bind<void (roboi_udp::*(roboi_udp*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64MultiArray_<std::allocator<void> > >)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<std_msgs::msg::Float64MultiArray_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99})\n'}
[1.877079] (roboi_amr_control) StderrLine: {'line': b'  394 |       \x1b[01;31m\x1b[Kcallback_variant_ = static_cast<typename scbth::callback_type>(callback)\x1b[m\x1b[K;\n'}
[1.877114] (roboi_amr_control) StderrLine: {'line': b'      |       \x1b[01;31m\x1b[K~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.877147] (roboi_amr_control) StderrLine: {'line': b'In file included from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/client.hpp:28\x1b[m\x1b[K,\n'}
[1.877182] (roboi_amr_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/callback_group.hpp:24\x1b[m\x1b[K,\n'}
[1.877215] (roboi_amr_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_executable.hpp:20\x1b[m\x1b[K,\n'}
[1.877248] (roboi_amr_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategy.hpp:25\x1b[m\x1b[K,\n'}
[1.877280] (roboi_amr_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/memory_strategies.hpp:18\x1b[m\x1b[K,\n'}
[1.877312] (roboi_amr_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor_options.hpp:20\x1b[m\x1b[K,\n'}
[1.877345] (roboi_amr_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executor.hpp:37\x1b[m\x1b[K,\n'}
[1.877377] (roboi_amr_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors/multi_threaded_executor.hpp:25\x1b[m\x1b[K,\n'}
[1.877412] (roboi_amr_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/executors.hpp:21\x1b[m\x1b[K,\n'}
[1.877444] (roboi_amr_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/rclcpp.hpp:155\x1b[m\x1b[K,\n'}
[1.877475] (roboi_amr_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/roboi-amr/ros2_ws/src/amr2_packages/roboi_control/include/roboi/roboi_udp.hpp:4\x1b[m\x1b[K,\n'}
[1.877506] (roboi_amr_control) StderrLine: {'line': b'                 from \x1b[01m\x1b[K/home/roboi-amr/ros2_ws/src/amr2_packages/roboi_control/src/roboi_udp.cpp:1\x1b[m\x1b[K:\n'}
[1.877538] (roboi_amr_control) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1461:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<_Types>::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<_Types>&> std::variant<_Types>::operator=(_Tp&&) [with _Tp = _Tp; _Types = {std::function<void(const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >&)>, std::function<void(const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::default_delete<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::default_delete<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.877593] (roboi_amr_control) StderrLine: {'line': b' 1461 |         \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(_Tp&& __rhs)\n'}
[1.877626] (roboi_amr_control) StderrLine: {'line': b'      |         \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.877659] (roboi_amr_control) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1461:9:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  template argument deduction/substitution failed:\n'}
[1.877691] (roboi_amr_control) StderrLine: {'line': b'/usr/include/c++/11/variant: In substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class ... _Types> template<class _Tp, class> using __accepted_type = std::variant<_Types>::__to_type<__accepted_index<_Tp> > [with _Tp = std::function<void(std::shared_ptr<std_msgs::msg::Float64MultiArray_<std::allocator<void> > >)>&&; <template-parameter-2-2> = void; _Types = {std::function<void(const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >&)>, std::function<void(const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::default_delete<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::default_delete<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.877741] (roboi_amr_control) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1457:14:\x1b[m\x1b[K   required by substitution of \xe2\x80\x98\x1b[01m\x1b[Ktemplate<class _Tp> std::enable_if_t<((__exactly_once<std::variant<std::function<void(const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >&)>, std::function<void(const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::default_delete<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::default_delete<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type> > && is_constructible_v<std::variant<std::function<void(const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >&)>, std::function<void(const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::default_delete<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::default_delete<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>, _Tp>) && is_assignable_v<std::variant<std::function<void(const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >&)>, std::function<void(const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::default_delete<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::default_delete<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::__accepted_type<_Tp&&, typename std::enable_if<__not_self<_Tp&&>, void>::type>&, _Tp>), std::variant<std::function<void(const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >&)>, std::function<void(const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::default_delete<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::default_delete<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&> std::variant<std::function<void(const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >&)>, std::function<void(const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::default_delete<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::default_delete<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >::operator=<_Tp>(_Tp&&) [with _Tp = std::function<void(std::shared_ptr<std_msgs::msg::Float64MultiArray_<std::allocator<void> > >)>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.877830] (roboi_amr_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp:394:25:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (roboi_udp::*(roboi_udp*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64MultiArray_<std::allocator<void> > >)>; MessageT = roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.877865] (roboi_amr_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >; CallbackT = std::_Bind<void (roboi_udp::*(roboi_udp*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.877904] (roboi_amr_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >; CallbackT = std::_Bind<void (roboi_udp::*(roboi_udp*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.877940] (roboi_amr_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >; CallbackT = std::_Bind<void (roboi_udp::*(roboi_udp*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.877980] (roboi_amr_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >; CallbackT = std::_Bind<void (roboi_udp::*(roboi_udp*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.878017] (roboi_amr_control) StderrLine: {'line': b'\x1b[01m\x1b[K/home/roboi-amr/ros2_ws/src/amr2_packages/roboi_control/src/roboi_udp.cpp:34:75:\x1b[m\x1b[K   required from here\n'}
[1.878050] (roboi_amr_control) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1375:15:\x1b[m\x1b[K \x1b[01;31m\x1b[Kerror: \x1b[m\x1b[Kno type named \xe2\x80\x98\x1b[01m\x1b[Ktype\x1b[m\x1b[K\xe2\x80\x99 in \xe2\x80\x98\x1b[01m\x1b[Kstruct std::enable_if<false, void>\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.878085] (roboi_amr_control) StderrLine: {'line': b' 1375 |         using \x1b[01;31m\x1b[K__accepted_type\x1b[m\x1b[K = __to_type<__accepted_index<_Tp>>;\n'}
[1.878117] (roboi_amr_control) StderrLine: {'line': b'      |               \x1b[01;31m\x1b[K^~~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.878150] (roboi_amr_control) StderrLine: {'line': b'/opt/ros/humble/include/rclcpp/rclcpp/any_subscription_callback.hpp: In instantiation of \xe2\x80\x98\x1b[01m\x1b[Krclcpp::AnySubscriptionCallback<MessageT, AllocatorT> rclcpp::AnySubscriptionCallback<MessageT, AllocatorT>::set(CallbackT) [with CallbackT = std::_Bind<void (roboi_udp::*(roboi_udp*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64MultiArray_<std::allocator<void> > >)>; MessageT = roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >; AllocatorT = std::allocator<void>]\x1b[m\x1b[K\xe2\x80\x99:\n'}
[1.878184] (roboi_amr_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/subscription_factory.hpp:94:32:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::SubscriptionFactory rclcpp::create_subscription_factory(CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr, std::shared_ptr<rclcpp::topic_statistics::SubscriptionTopicStatistics<ROSMessageType> >) [with MessageT = roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >; CallbackT = std::_Bind<void (roboi_udp::*(roboi_udp*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::allocator<void> >; ROSMessageType = roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.878222] (roboi_amr_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:122:63:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::detail::create_subscription(NodeParametersT&, NodeTopicsT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >; CallbackT = std::_Bind<void (roboi_udp::*(roboi_udp*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::allocator<void> >; NodeParametersT = rclcpp::Node; NodeTopicsT = rclcpp::Node; ROSMessageType = roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.878264] (roboi_amr_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/create_subscription.hpp:191:76:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::create_subscription(NodeT&, const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >; CallbackT = std::_Bind<void (roboi_udp::*(roboi_udp*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::allocator<void> >; NodeT = rclcpp::Node; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.878299] (roboi_amr_control) StderrLine: {'line': b'\x1b[01m\x1b[K/opt/ros/humble/include/rclcpp/rclcpp/node_impl.hpp:99:47:\x1b[m\x1b[K   required from \xe2\x80\x98\x1b[01m\x1b[Kstd::shared_ptr<ROSMessageT> rclcpp::Node::create_subscription(const string&, const rclcpp::QoS&, CallbackT&&, const rclcpp::SubscriptionOptionsWithAllocator<AllocatorT>&, typename MessageMemoryStrategyT::SharedPtr) [with MessageT = roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >; CallbackT = std::_Bind<void (roboi_udp::*(roboi_udp*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64MultiArray_<std::allocator<void> > >)>; AllocatorT = std::allocator<void>; SubscriptionT = rclcpp::Subscription<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >; MessageMemoryStrategyT = rclcpp::message_memory_strategy::MessageMemoryStrategy<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::allocator<void> >; std::string = std::__cxx11::basic_string<char>; typename MessageMemoryStrategyT::SharedPtr = std::shared_ptr<rclcpp::message_memory_strategy::MessageMemoryStrategy<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::allocator<void> > >]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.878334] (roboi_amr_control) StderrLine: {'line': b'\x1b[01m\x1b[K/home/roboi-amr/ros2_ws/src/amr2_packages/roboi_control/src/roboi_udp.cpp:34:75:\x1b[m\x1b[K   required from here\n'}
[1.878366] (roboi_amr_control) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1398:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(const std::variant<_Types>&) [with _Types = {std::function<void(const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >&)>, std::function<void(const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::default_delete<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::default_delete<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.878409] (roboi_amr_control) StderrLine: {'line': b' 1398 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(const variant&) = default;\n'}
[1.878442] (roboi_amr_control) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.878474] (roboi_amr_control) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1398:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::_Bind<void (roboi_udp::*(roboi_udp*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64MultiArray_<std::allocator<void> > >)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<std_msgs::msg::Float64MultiArray_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kconst std::variant<std::function<void(const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >&)>, std::function<void(const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::default_delete<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::default_delete<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.878517] (roboi_amr_control) StderrLine: {'line': b' 1398 |       variant& operator=(\x1b[01;36m\x1b[Kconst variant&\x1b[m\x1b[K) = default;\n'}
[1.878551] (roboi_amr_control) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~~~~~~\x1b[m\x1b[K\n'}
[1.878589] (roboi_amr_control) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1399:16:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[Kcandidate: \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<_Types>& std::variant<_Types>::operator=(std::variant<_Types>&&) [with _Types = {std::function<void(const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >&)>, std::function<void(const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::default_delete<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::default_delete<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>}]\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.878630] (roboi_amr_control) StderrLine: {'line': b' 1399 |       variant& \x1b[01;36m\x1b[Koperator\x1b[m\x1b[K=(variant&&) = default;\n'}
[1.878663] (roboi_amr_control) StderrLine: {'line': b'      |                \x1b[01;36m\x1b[K^~~~~~~~\x1b[m\x1b[K\n'}
[1.878695] (roboi_amr_control) StderrLine: {'line': b'\x1b[01m\x1b[K/usr/include/c++/11/variant:1399:26:\x1b[m\x1b[K \x1b[01;36m\x1b[Knote: \x1b[m\x1b[K  no known conversion for argument 1 from \xe2\x80\x98\x1b[01m\x1b[Krclcpp::detail::SubscriptionCallbackTypeHelper<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::_Bind<void (roboi_udp::*(roboi_udp*, std::_Placeholder<1>))(std::shared_ptr<std_msgs::msg::Float64MultiArray_<std::allocator<void> > >)>, void>::callback_type\x1b[m\x1b[K\xe2\x80\x99 {aka \xe2\x80\x98\x1b[01m\x1b[Kstd::function<void(std::shared_ptr<std_msgs::msg::Float64MultiArray_<std::allocator<void> > >)>\x1b[m\x1b[K\xe2\x80\x99} to \xe2\x80\x98\x1b[01m\x1b[Kstd::variant<std::function<void(const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >&)>, std::function<void(const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >&, const rclcpp::MessageInfo&)>, std::function<void(const rclcpp::SerializedMessage&)>, std::function<void(const rclcpp::SerializedMessage&, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::default_delete<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > > >)>, std::function<void(std::unique_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> >, std::default_delete<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > > >, const rclcpp::MessageInfo&)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >)>, std::function<void(std::unique_ptr<rclcpp::SerializedMessage, std::default_delete<rclcpp::SerializedMessage> >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<const rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >&)>, std::function<void(const std::shared_ptr<const roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >&, const rclcpp::MessageInfo&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&)>, std::function<void(const std::shared_ptr<const rclcpp::SerializedMessage>&, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >)>, std::function<void(std::shared_ptr<roboi_amr_msgs::msg::Udpsend_<std::allocator<void> > >, const rclcpp::MessageInfo&)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>)>, std::function<void(std::shared_ptr<rclcpp::SerializedMessage>, const rclcpp::MessageInfo&)> >&&\x1b[m\x1b[K\xe2\x80\x99\n'}
[1.878739] (roboi_amr_control) StderrLine: {'line': b' 1399 |       variant& operator=(\x1b[01;36m\x1b[Kvariant&&\x1b[m\x1b[K) = default;\n'}
[1.878772] (roboi_amr_control) StderrLine: {'line': b'      |                          \x1b[01;36m\x1b[K^~~~~~~~~\x1b[m\x1b[K\n'}
[1.905003] (-) TimerEvent: {}
[2.005271] (-) TimerEvent: {}
[2.105619] (-) TimerEvent: {}
[2.205862] (-) TimerEvent: {}
[2.306128] (-) TimerEvent: {}
[2.406453] (-) TimerEvent: {}
[2.506764] (-) TimerEvent: {}
[2.607126] (-) TimerEvent: {}
[2.707425] (-) TimerEvent: {}
[2.807784] (-) TimerEvent: {}
[2.908122] (-) TimerEvent: {}
[3.008392] (-) TimerEvent: {}
[3.108709] (-) TimerEvent: {}
[3.172764] (roboi_amr_control) StderrLine: {'line': b'gmake[2]: *** [CMakeFiles/roboi_amr_control.dir/build.make:90: CMakeFiles/roboi_amr_control.dir/src/roboi_udp.cpp.o] Error 1\n'}
[3.172976] (roboi_amr_control) StderrLine: {'line': b'gmake[1]: *** [CMakeFiles/Makefile2:137: CMakeFiles/roboi_amr_control.dir/all] Error 2\n'}
[3.173090] (roboi_amr_control) StderrLine: {'line': b'gmake: *** [Makefile:146: all] Error 2\n'}
[3.174624] (roboi_amr_control) CommandEnded: {'returncode': 2}
[3.200666] (roboi_amr_control) JobEnded: {'identifier': 'roboi_amr_control', 'rc': 2}
[3.208773] (-) TimerEvent: {}
[3.211084] (-) EventReactorShutdown: {}
